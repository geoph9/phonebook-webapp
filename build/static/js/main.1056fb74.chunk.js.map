{"version":3,"sources":["components/Persons.js","components/Header.js","components/PersonForm.js","components/Notification.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Person","person","removePerson","name","number","onClick","Persons","persons","filterValue","deletePerson","filter","toLowerCase","includes","map","id","SubHeader","text","Header","PersonForm","addPerson","newName","handleNewName","newNumber","handleNewNumber","onSubmit","value","onChange","type","Notification","message","className","Filter","handleFilterNames","baseUrl","axios","get","then","response","data","newObject","post","put","delete","showNotification","setNotification","timeout","setTimeout","App","useState","setPersons","setNewName","setNewNumber","setFilterValue","notification","errorMessage","setErrorMessage","useEffect","personService","initialPeople","event","target","preventDefault","thatPerson","alert","window","confirm","changedPerson","returnedPerson","p","catch","error","updatePerson","concat","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1056fb74.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person, removePerson }) => {\n  return (\n    <li>\n      {person.name} {person.number} <button onClick={removePerson}>Remove</button>\n    </li>\n  )\n}\n\nconst Persons = ({ persons, filterValue, deletePerson }) => {\n  return (\n    <ul>\n      { persons.filter(person => person.name.toLowerCase().includes(filterValue)).map(person =>           \n        <Person \n          key={person.name} \n          person={person} \n          removePerson={() => deletePerson(person.id)} />\n      )}\n    </ul>\n    \n  )\n}\n\nexport default Persons","import React from 'react'\n\nconst Header = ({ text }) => {\n    return (\n      <h1>{text}</h1>\n    )\n  }\n\nconst SubHeader = ({ text }) => {\n  return (\n    <h2>{text}</h2>\n  )\n}\n\nexport default Header;\nexport { SubHeader }","import React from 'react'\n\nconst PersonForm = ({ addPerson, newName, handleNewName, newNumber, handleNewNumber }) => {\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNewName} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm","import React from 'react'\n\nconst Notification = ({ message, type=\"notification\" }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Filter = ({ filterValue, handleFilterNames }) => {\n  return (\n    <div>\n      Filter shown with: <input value={filterValue} onChange={handleFilterNames} />\n    </div>\n  )\n}\n\nexport default Filter","import axios from 'axios'\nconst baseUrl = '/api/persons'\n// const baseUrl = 'http://localhost:3100/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, remove }","import React, { useEffect, useState } from 'react'\nimport Persons from './components/Persons'\nimport Header, {SubHeader} from './components/Header'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\n// import axios from 'axios';\nimport personService from './services/persons'\n\nconst showNotification = (setNotification, text, timeout=3000) => {\n  setNotification(text)\n  setTimeout(() => {\n    setNotification(null)\n  }, timeout)\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterValue, setFilterValue ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n  const [ errorMessage, setErrorMessage ] = useState(null)\n\n  const hook = () => {\n    personService\n      .getAll()\n      .then(initialPeople => {\n        setPersons(initialPeople)\n      })\n  }\n  useEffect(hook, [])\n\n  const updatePerson = (person) => {\n    const replaceConfirm = window.confirm(`${newName} is already added to the phonebook, replace the old number?`)\n    if (replaceConfirm === false) return\n\n    // const person = persons.find(p => p.id === id)\n    const changedPerson = { ...person, number: newNumber }\n\n    personService\n      .update(person.id, changedPerson)\n      .then(returnedPerson => {\n        setPersons(persons.map(p => p.id !== person.id ? p : returnedPerson))\n        showNotification(setNotification, `Updated ${person.name}`, 3000)\n      })\n      .catch(error => {\n        // alert(\n        //   `Person '${person.name}' could not be found in the server.`\n        // )\n        showNotification(\n          setErrorMessage, \n          `Information of ${person.name} has already been removed from the server`, \n          5000\n        )\n\n        // setPersons(n => n.id !== person.id)\n      })\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    if (persons.map((person) => person.name).includes(newName)) {\n      const thatPerson = persons.filter((person) => person.name === newName)[0];\n      if (thatPerson.number === newNumber) {\n        alert(`${newName} is already added to the phonebook`)\n        return\n      }\n      updatePerson(thatPerson)\n      return\n    }\n    if (newName === '' || newNumber === '') {\n      alert(\"Expected a pair of a person's name and their phone number while only one of those were found.\")\n      return\n    }\n    const person = {\n      name: newName,\n      number: newNumber,\n      // id: persons.length + 1,\n    }\n  \n    personService\n      .create(person)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('')\n        setNewNumber('')\n        setFilterValue('')\n        showNotification(setNotification, `Added ${person.name}`, 3000)\n      })\n  }\n\n  const handleNewName = (event) => {\n    // console.log(`name target: ${event.target.value}`);\n    setNewName(event.target.value)\n  }\n\n  const handleNewNumber = (event) => {\n    // console.log(event.target.value);\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterNames = (event) => {\n    // console.log(event.target.value);\n    setFilterValue(event.target.value);\n  }\n\n  const deletePerson = (id) => {\n    const person = persons.find(p => p.id === id);\n    const confirmation = window.confirm(`Delete ${person.name}?`);\n    if (confirmation === false) {\n      return\n    }\n    if (!persons.map((p) => p.name).includes(person.name)) {\n      alert(`${newName} is not a part of the phonebook`)\n      return\n    }\n  \n    personService\n      .remove(id)\n      .then(returnedPerson => {\n        setPersons(\n          persons.filter(p => p.id !== id)\n        )\n        setNewName('')\n        setNewNumber('')\n        setFilterValue('')\n        showNotification(setNotification, `Deleted ${person.name}`, 3000)\n      })\n      .catch(error => {\n        alert(\n          `The person '${person.name}' was already deleted from the server.`\n        )\n        setPersons(p => p.id !== id)\n      })\n  }\n\n  return (\n    <div>\n      <Header text=\"Phonebook\" />\n      <Notification message={notification} type=\"notification\" />\n      <Notification message={errorMessage} type=\"error\" />\n      <Filter filterValue={filterValue} handleFilterNames={handleFilterNames} />\n      <SubHeader text=\"Add a New\" />\n      <PersonForm \n        addPerson={addPerson} \n        newName={newName} \n        handleNewName={handleNewName} \n        newNumber={newNumber} \n        handleNewNumber={handleNewNumber}\n      />\n      <SubHeader text=\"Numbers\" />\n      <Persons \n        persons={persons}\n        filterValue={filterValue}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport \"./index.css\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}